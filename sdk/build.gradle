apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode omise_sdk_code_version
        versionName omise_sdk_version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage' // okio
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests {
            returnDefaultValues true
            includeAndroidResources true
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android {
        sourceSets {
            String sharedTestDir = "$projectDir/src/sharedTest/java"
            test {
                java.srcDir sharedTestDir
            }
            androidTest {
                java.srcDir sharedTestDir
            }
        }
    }
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        if (project.properties.containsKey('ossrhUsername') && project.properties.containsKey('ossrhPassword')) {
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
        }

        pom.project {
            name 'Omise Android SDK'
            description 'Android SDK for Omise API'
            packaging 'aar'
            groupId 'co.omise'
            artifactId 'omise-android'
            version omise_sdk_version
            url 'https://www.omise.co'

            scm {
                connection 'scm:git:git://git.github.com/omise/omise-android'
                developerConnection 'scm:git:git://git.github.com/omise/omise-android'
                url 'https://github.com/omise/omise-android'
            }

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'https://opensource.org/licenses/MIT'
                }
            }

            developers {
                developer {
                    id 'chakrit'
                    name 'Chakrit Wichian'
                    email 'chakrit@omise.co'
                }
            }
        }
    }
}

dependencies {
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "joda-time:joda-time:$joda_time_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:$joda_time_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    debugImplementation("androidx.fragment:fragment-testing:$fragment_testing_version") {
        exclude group: 'androidx.test', module: 'core'
    }

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "androidx.test:rules:$test_version"
    testImplementation "androidx.test:runner:$test_version"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    testImplementation "androidx.test.ext:junit:$junit_ext_version"
    testImplementation "com.android.support:support-annotations:$support_annotations_version"

    androidTestImplementation "com.android.support:support-annotations:$support_annotations_version"
    androidTestImplementation "com.google.guava:guava:$guava_version"
    androidTestImplementation "org.robolectric:annotations:$robolectric_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "androidx.test:rules:$test_version"
    androidTestImplementation "androidx.test:runner:$test_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
}

repositories {
    mavenCentral()
}
