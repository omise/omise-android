apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode omise_sdk_code_version
        versionName omise_sdk_version
        buildConfigField "int", "VERSION_CODE", "$omise_sdk_code_version"
        buildConfigField "String", "VERSION_NAME", "\"$omise_sdk_version\""
        testInstrumentationRunner "co.omise.android.OmiseTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "mode"
    productFlavors {
        production {
            dimension "mode"
        }
        staging {
            dimension "mode"
        }
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage' // okio
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests {
            animationsDisabled true
            returnDefaultValues true
            includeAndroidResources true
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    android {
        sourceSets {
            String sharedTestDir = "$projectDir/src/sharedTest/java"
            test {
                java.srcDir sharedTestDir
            }
            androidTest {
                java.srcDir sharedTestDir
            }
        }
    }
}

publishing {
    publications {
        release(MavenPublication) {
            setGroupId 'co.omise'
            setArtifactId 'omise-android'
            version android.defaultConfig.versionName
            project.afterEvaluate {
                artifact bundleProductionReleaseAar
            }
            pom {
                name = 'Omise Android SDK'
                description = 'Android SDK for Omise API'
                url = 'https://www.omise.co'
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
                scm {
                    connection = 'scm:git:git://git.github.com/omise/omise-android'
                    developerConnection = 'scm:git:git://git.github.com/omise/omise-android'
                    url = 'https://github.com/omise/omise-android'
                }
                developers {
                    developer {
                        id = 'natthawut'
                        name = 'Natthawut Haematulin'
                        email = 'natthawut@omise.co'
                    }
                }
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            def ossrhUsername = System.getenv("SONATYPE_USERNAME")
            def ossrhPassword = System.getenv("SONATYPE_PASSWORD")
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    def signingKey = System.getenv("PGP_SIGNING_KEY")
    def signingPassword = System.getenv("PGP_SIGNING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.release
}

dependencies {
//    implementation project(":3DS-ANDROID-SDK:threeds")
    implementation("co.omise:threeds-android:$omise_threeds_sdk_version") {
        exclude module: 'asm'
    }
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    api "joda-time:joda-time:$joda_time_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:$joda_time_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    debugImplementation("androidx.fragment:fragment-testing:$fragment_testing_version") {
        exclude group: 'androidx.test', module: 'core'
    }

    testImplementation project(":testsupport")
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.test:rules:$test_version"
    testImplementation "androidx.test:runner:$test_version"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-web:$espresso_version"
    testImplementation "androidx.test.ext:junit:$junit_ext_version"
    testImplementation "androidx.annotation:annotation:$annotation_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    androidTestImplementation "androidx.annotation:annotation:$annotation_version"
    androidTestImplementation "com.google.guava:guava:$guava_version"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    androidTestImplementation "org.robolectric:annotations:$robolectric_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "androidx.test:rules:$test_version"
    androidTestImplementation "androidx.test:runner:$test_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "com.github.tmurakami:dexopener:$dexopener_version"
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}
