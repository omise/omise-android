name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run ktlint
        run: ./gradlew sdk:ktlintCheck

      - name: Build project
        run: ./gradlew sdk:build -x test

  unit-intrumented-test-maven-publish:
    name: Unit/Instrumented tests with maven publish
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        api-level: [ 33 ]
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for SonarCloud

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Determine emulator target
        id: determine-target
        run: |
          TARGET="google_apis"
          if [[ ${{ matrix.api-level }} -ge 34 ]]; then
            TARGET="aosp_atd"
          fi
          echo "TARGET=$TARGET" >> $GITHUB_OUTPUT

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ steps.determine-target.outputs.TARGET }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Run unit/instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ steps.determine-target.outputs.TARGET }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -skin 1080x2340
          disable-animations: true
          profile: pixel_9_pro
          script: |
            adb uninstall co.omise.android.test || true
            adb uninstall co.omise.android || true
            ./gradlew sdk:jacocoTestReport sdk:sonar

      - name: Publish Maven package
        run: ./gradlew publishToSonatype closeStagingRepositories
        env:
          PGP_SIGNING_KEY: ${{ secrets.PGP_SIGNING_KEY }}
          PGP_SIGNING_PASSWORD: ${{ secrets.PGP_SIGNING_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

