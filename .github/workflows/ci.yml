name: Android CI

on: push

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run ktlint
        run: ./gradlew sdk:ktlintCheck

      - name: Build project
        run: ./gradlew sdk:build -x test

  unit-tests:
    name: Unit tests with coverage report
    if: ${{ github.ref != 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for SonarCloud

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run unit tests
        run: ./gradlew sdk:jacocoTestReport -x createProductionDebugCoverageReport

  instrumentation-tests:
    name: Instrumentation tests with coverage report
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: macos-latest
    needs: build
    strategy:
      matrix:
        api-level: [ 29 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for SonarCloud

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          profile: Nexus 6
          script: echo "Generated AVD snapshot for caching."

      - name: Run instrumentation
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          disable-animations: true
          force-avd-creation: false
          profile: Nexus 6
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: ./gradlew sdk:jacocoTestReport

  debug-info:
    name: Debug Information
    runs-on: ubuntu-latest
    needs: [ build, unit-tests, instrumentation-tests ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug Info - Unit tests
        run: |
          echo "Unit Tests Outcome: ${{ needs.unit-tests.outcome }}"
      - name: Debug Info - Instrumentation Tests Outcome
        run: |
          echo "Instrumentation Tests Outcome: ${{ needs.instrumentation-tests.outcome }}"


  sonar:
    name: Sonar report upload
    runs-on: ubuntu-latest
    needs: [build, unit-tests, instrumentation-tests]
    strategy:
      fail-fast: false
    if: ${{ (needs.unit-tests.outcome == 'skipped' && needs.instrumentation-tests.outcome == 'success') || (needs.instrumentation-tests.outcome == 'skipped' && needs.unit-tests.outcome == 'success') }}
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for SonarCloud

      - name: Upload report
        run: ./gradlew sdk:sonar



